<rsb:script xmlns:rsb="http://www.rssbus.com/ns/rsbscript/2" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <!-- See Column Definitions to specify column behavior and use XPaths to extract column values from JSON. -->
  <rsb:info title="JSONData" desc="Generated schema file." xmlns:other="http://www.rssbus.com/ns/rsbscript/2/other">
    <!-- You can modify the name, type, and column size here.  The name must match the values in the rsb:script block below -->
    <attr name="family_name"      xs:type="string"   readonly="false" other:xPath="family_name"       />
    <attr name="first_name"       xs:type="string"   readonly="false" other:xPath="first_name"        />
    <attr name="kana_family_name" xs:type="string"   readonly="false" other:xPath="kana_family_name"  />
    <attr name="kana_first_name"  xs:type="string"   readonly="false" other:xPath="kana_first_name"   />
    <attr name="user_number"      xs:type="unknown"  readonly="false" other:xPath="user_number"       />
    <attr name="regulation_name"  xs:type="string"   readonly="false" other:xPath="regulation_name"   />
    <attr name="email"            xs:type="string"   readonly="false" other:xPath="email"             />
    <attr name="created"          xs:type="datetime" readonly="false" other:xPath="created"           />
    <attr name="role_name"        xs:type="string"   readonly="false" other:xPath="role_name"         />
    <attr name="pass_price"       xs:type="integer"  readonly="false" other:xPath="pass_price"        />
    <attr name="pass_note"        xs:type="unknown"  readonly="false" other:xPath="pass_note"         />
    <attr name="save_buying"      xs:type="boolean"  readonly="false" other:xPath="save_buying"       />
  </rsb:info>

  <rsb:set attr="uri" value="https://api.kincone.com/v1/users" />

  <!-- Column XPaths are relative to a RepeatElement that splits the JSON into rows. -->
  <rsb:set attr="RepeatElement" value="/response/users" />

  <!-- The GET method corresponds to SELECT. Within the script block, you can see the URI modified to append a query string parameter. The results of processing are pushed to the schema's output. See SELECT Execution for more information. -->
  <rsb:script method="GET">
    <rsb:call op="jsonproviderGet">
      <rsb:push/>
    </rsb:call>
  </rsb:script>

  <!-- To add support for INSERTS please see the INSERT Execution page within the help for further information and examples. -->
  <rsb:script method="POST">
    <rsb:set attr="method" value="POST"/>
    <rsb:call op="jsonproviderGet">
      <rsb:throw code="500" desc="Inserts are not currently supported."/>
      <rsb:push/>
    </rsb:call>
  </rsb:script>

  <!-- To add support for UPDATES please see the UPDATE Execution page within the help for further information and examples. -->
  <rsb:script method="MERGE">
    <rsb:set attr="method" value="PUT"/>
    <rsb:call op="jsonproviderGet">
      <rsb:throw code="500" desc="Updates are not currently supported."/>
      <rsb:push/>
    </rsb:call>
  </rsb:script>

  <!-- To add support for DELETES please see the DELETE Execution page within the help for further information and examples. -->
  <rsb:script method="DELETE">
    <rsb:set attr="method" value="DELETE"/>
    <rsb:call op="jsonproviderGet">
      <rsb:throw code="500" desc="Deletes are not currently supported."/>
      <rsb:push/>
    </rsb:call>
  </rsb:script>

</rsb:script>